stages:
  - check-aws-gitlab-repo
  - publish

check-aws-gitlab-repo:
  stage: check-aws-gitlab-repo # test
  image: python
  tags:
    - k8s-runner
  script:
    - pip install httpx
    - /cache/ccie-gitlab-runner-tools/create-gitlab-repo.py $aws_gitlab_url ${CI_PROJECT_PATH} $aws_gitlab_token
  when: manual
  allow_failure: true

publish-job:
  stage: publish
  image: docker:git
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - echo "Publishing the container image with the tag '$CI_COMMIT_TAG'"
    - docker build -f Dockerfile -t $CI_PROJECT_NAME:$CI_COMMIT_TAG .
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_REGISTRY/$CI_PROJECT_PATH/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_REGISTRY/$CI_PROJECT_PATH/$CI_PROJECT_NAME:latest
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_PROJECT_NAME:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:$CI_COMMIT_TAG

    - echo "Pushing to aws-gitlab at $aws_gitlab_registry/$CI_PROJECT_PATH/$CI_PROJECT_NAME:latest"
    - docker login -u $aws_gitlab_username -p $aws_gitlab_token $aws_gitlab_registry
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $aws_gitlab_registry/$CI_PROJECT_PATH/$CI_PROJECT_NAME:$CI_COMMIT_TAG
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $aws_gitlab_registry/$CI_PROJECT_PATH/$CI_PROJECT_NAME:latest
    - docker tag $CI_PROJECT_NAME:$CI_COMMIT_TAG $CI_PROJECT_NAME:latest
    - docker push $aws_gitlab_registry/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:latest
    - docker push $aws_gitlab_registry/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:$CI_COMMIT_TAG
  only:
    - tags
