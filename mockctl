#!/usr/bin/env bash

# Convenience wrapper for the Python CLI
# This allows calling "mockctl" directly instead of "python3 mockctl.py"

# Resolve symlinks to get the actual script location
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    SCRIPT_DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$SCRIPT_DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
SCRIPT_DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"
PYTHON_CLI="$SCRIPT_DIR/src/cli/mockctl.py"

# Check if Python CLI exists
if [ ! -f "$PYTHON_CLI" ]; then
    echo "‚ùå Error: Python CLI not found at $PYTHON_CLI"
    exit 1
fi

# Function to find the best Python executable
find_python() {
    # Check for local virtual environment first (faster)
    if [ -f "$SCRIPT_DIR/.venv/bin/python" ]; then
        echo "$SCRIPT_DIR/.venv/bin/python"
        return
    fi
    
    # Check for Poetry
    if command -v poetry >/dev/null 2>&1 && [ -f "$SCRIPT_DIR/pyproject.toml" ]; then
        # Change to the script directory for Poetry operations
        cd "$SCRIPT_DIR"
        # Quick check if Poetry can find environment (avoid hanging)
        if [ -d ".venv" ] && poetry env info --path >/dev/null 2>&1; then
            echo "poetry" "run" "python"
            return
        fi
    fi
    
    # Check if Python 3 is available
    if command -v python3 >/dev/null 2>&1; then
        echo "python3"
        return
    fi
    
    # Fallback to python
    if command -v python >/dev/null 2>&1; then
        echo "python"
        return
    fi
    
    echo ""
}

# Get the Python command
PYTHON_CMD=$(find_python)

if [ -z "$PYTHON_CMD" ]; then
    echo "‚ùå Error: No suitable Python interpreter found"
    echo "üí° Please install Python 3 or run './setup_alpine.sh' to set up the environment"
    exit 1
fi

# Execute the Python CLI with all arguments
if [ "$PYTHON_CMD" = "poetry run python" ]; then
    cd "$SCRIPT_DIR"
    exec poetry run python "$PYTHON_CLI" "$@"
else
    exec $PYTHON_CMD "$PYTHON_CLI" "$@"
fi
