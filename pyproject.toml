
[tool.poetry]
name = "MockAndRoll"
version = "0.1.0"
description = "A highly configurable and extensible mock REST API server built with FastAPI that allows to quickly create mock endpoints with various authentication methods, conditional responses, and dynamic path parameters."
authors = ["Bruno van de Werve <bvandewe@cisco.com>"]
license = "MIT"
readme = "README.md"
package-mode = false

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.6"
uvicorn = "^0.34.0"
redis = "^5.2.1"
pyhumps = "^3.8.0"
pyjwt = "^2.10.1"
python-dateutil = "^2.9.0.post0"
pre-commit = "^4.3.0"
requests = "^2.32.5"
python-multipart = "^0.0.9"
email-validator = "^2.2.0"
psutil = "^6.1.0"

[tool.poetry.group.test.dependencies]
pytest = "^8"
python-dotenv = "^1.1.0"
pytest-asyncio = "^0.26.0"

[tool.black]
line-length = 500

[tool.flake8]
ignore = ["E501"]
max-line-length = 500
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "env", 
    ".env",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
