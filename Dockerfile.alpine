# Example Dockerfile.alpine for the mock server with minimal requirements
FROM python:3.11-alpine

# Install system dependencies (minimal set - no network tools needed for port detection)
RUN apk update && apk add --no-cache \
    # Process tools (for server process management)
    procps \
    util-linux \
    # Development tools
    bash \
    git \
    jq \
    curl \
    # Build dependencies for Python packages
    gcc \
    musl-dev \
    linux-headers

# Note: Port detection now uses Python's built-in socket module
# No longer need: net-tools, iproute2, lsof (network tools)
# No longer need: coreutils, findutils, grep, sed, awk (text processing)

# Set bash as default shell
SHELL ["/bin/bash", "-c"]

# Install Poetry
RUN pip install poetry

# Set working directory
WORKDIR /app

# Copy project files
COPY . .

# Configure Poetry
RUN poetry config virtualenvs.create true && \
    poetry config virtualenvs.in-project true

# Install dependencies
RUN poetry install --no-dev

# Make scripts executable
RUN chmod +x *.sh

# Expose port
EXPOSE 8000

# Default command
CMD ["./start_vmanage_api.sh"]
